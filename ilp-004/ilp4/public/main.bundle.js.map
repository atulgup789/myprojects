{"version":3,"sources":["E:/ilp4/angular/src/$_gendir lazy","E:/ilp4/angular/src/app/app.component.css","E:/ilp4/angular/src/app/app.component.html","E:/ilp4/angular/src/app/app.component.ts","E:/ilp4/angular/src/app/app.module.ts","E:/ilp4/angular/src/app/app.routing.ts","E:/ilp4/angular/src/app/books/About.component.html","E:/ilp4/angular/src/app/books/About.component.ts","E:/ilp4/angular/src/app/books/addbook-form.component.html","E:/ilp4/angular/src/app/books/addbook-form.component.ts","E:/ilp4/angular/src/app/books/book-detail.component.html","E:/ilp4/angular/src/app/books/book-detail.component.ts","E:/ilp4/angular/src/app/books/books-filter.pipe.ts","E:/ilp4/angular/src/app/books/books.component.html","E:/ilp4/angular/src/app/books/books.component.ts","E:/ilp4/angular/src/app/books/books.service.ts","E:/ilp4/angular/src/app/books/editbook-form.component.html","E:/ilp4/angular/src/app/books/editbook-form.component.ts","E:/ilp4/angular/src/app/books/summary.component.html","E:/ilp4/angular/src/app/books/summary.component.ts","E:/ilp4/angular/src/environments/environment.ts","E:/ilp4/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"text-default text-center\\\" style=\\\"color: green\\\"></h1>\\n<nav>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\">\\n  <a routerLink=\\\"about\\\" routerLinkActive=\\\"active color: green\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><button class=\\\"btn btn-default\\\"  style=\\\"font-size: 30px\\\">About</button></a>\\n  </div>\\n  <div class=\\\"col-xs-4\\\">\\n    <a routerLink=\\\"allbook\\\" routerLinkActive=\\\"active\\\"><button class=\\\"btn btn-default\\\" style=\\\"font-size: 30px\\\">BookDetail</button></a>\\n   </div>\\n   <div class=\\\"col-xs-4\\\">\\n     <a routerLink=\\\"summary\\\" routerLinkActive=\\\"active\\\"><button class=\\\"btn btn-default\\\" style=\\\"font-size: 30px\\\">BookSummary</button></a>\\n    </div>\\n    </div>\\n    </nav>\\n  \\n  \\n \\n  <router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { BookComponent} from './books/book-detail.component';\nimport { NgModule } from '@angular/core';\nimport { BooksService } from './books/books.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n@NgModule({\n    declarations: [BookComponent, AppComponent]\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HashLocationStrategy, LocationStrategy} from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { BookComponent} from './books/book-detail.component';\nimport { BooksService } from './books/books.service';\nimport { BooksComponent} from './books/books.component';\n\nimport { BookFilterPipe} from './books/books-filter.pipe';\n\nimport { routing }  from './app.routing';\nimport {AddBookFormComponent} from './books/addbook-form.component';\nimport {EditBookFormComponent} from './books/editbook-form.component';\nimport {BookSummary} from './books/summary.component';\nimport {About} from './books/About.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n\n@NgModule({\n  declarations: [ AppComponent, BookComponent, BooksComponent, BookFilterPipe, AddBookFormComponent, EditBookFormComponent, BookSummary, About ],\n  imports: [ BrowserModule, routing, FormsModule, HttpClientModule, HttpModule ],\n  providers:  [ BooksService, {provide: LocationStrategy, useClass: HashLocationStrategy} ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { BookComponent } from './books/book-detail.component';\r\nimport { BooksComponent} from './books/books.component';\r\nimport {AddBookFormComponent} from './books/addbook-form.component';\r\nimport {EditBookFormComponent} from './books/editbook-form.component';\r\nimport {BookSummary} from './books/summary.component';\r\nimport {About} from './books/About.component';\r\nconst appRoute =[\r\n    {path: 'allbook', component: BooksComponent },\r\n\r\n    {path: 'allbook/:id', component: BookComponent},\r\n    {path: 'addbook', component: AddBookFormComponent},\r\n\r\n    {path: 'updatebook/:id', component: EditBookFormComponent}, \r\n    {path: 'summary', component: BookSummary},\r\n    {path: 'about', component: About}\r\n];\r\nexport const routing = RouterModule.forRoot(appRoute);\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/app.routing.ts","module.exports = \"\\r\\n<body><h1 class=\\\"default-text text-center\\\" style=\\\"color: chocolate\\\"><em>WELCOME TO THE BOOKSTORE</em></h1></body>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/About.component.html\n// module id = ../../../../../src/app/books/About.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport {AppComponent} from '../app.component';\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: './About.component.html'\r\n})\r\nexport class About {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/About.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Add Book</h1>\\r\\n  <form #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formRef.value)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\">Book Title</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\" required minlength=\\\"3\\\" #nameRef1=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef1.invalid && (nameRef1.dirty || nameRef1.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef1.errors.required\\\">\\r\\n          Title is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef1.errors.minlength\\\">\\r\\n          Title must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"author\\\">Author</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"author\\\" name=\\\"author\\\" [(ngModel)]=\\\"author\\\" required minlength=\\\"5\\\" #nameRef2=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef2.invalid && (nameRef2.dirty || nameRef2.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef2.errors.required\\\">\\r\\n          A name is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef2.errors.minlength\\\">\\r\\n          Name must be at least 5 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"publisher\\\">Publisher</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"publisher\\\" name=\\\"publisher\\\" [(ngModel)]=\\\"publisher\\\" required minlength=\\\"3\\\" #nameRef3=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef3.invalid && (nameRef3.dirty || nameRef3.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef3.errors.required\\\">\\r\\n          Name is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef3.errors.minlength\\\">\\r\\n        Name must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"publicationDate\\\">Publication Date</label>\\r\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"publicationDate\\\" name=\\\"publicationDate\\\" [(ngModel)]=\\\"publicationDate\\\" required  #nameRef4=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef4.invalid && (nameRef4.dirty || nameRef4.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef4.errors.required\\\">\\r\\n          Date is required.\\r\\n        </div>\\r\\n       \\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"price\\\">Book Price</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required  #nameRef5=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef5.invalid && (nameRef5.dirty || nameRef5.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef5.errors.required\\\">\\r\\n          Price is required.\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"isbn\\\">ISBN</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"isbn\\\" name=\\\"isbn\\\" [(ngModel)]=\\\"isbn\\\" required  #nameRef6=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef6.invalid && (nameRef6.dirty || nameRef6.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef6.errors.required\\\">\\r\\n          ISBN is required.\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"genre\\\">Genre</label>\\r\\n      <select class=\\\"form-control\\\" name=\\\"genre\\\" [ngModel]=\\\"genre\\\">\\r\\n        <option *ngFor=\\\"let genre of genres\\\" [value]=\\\"genre\\\">\\r\\n          {{genre}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div><div class=\\\"form-group\\\">\\r\\n      <label for=\\\"genre\\\">Format</label>\\r\\n      <select class=\\\"form-control\\\" name=\\\"format\\\" [ngModel]=\\\"format\\\">\\r\\n        <option *ngFor=\\\"let format of formats\\\" [value]=\\\"format\\\">\\r\\n          {{format}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n \\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"formRef.invalid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/addbook-form.component.html\n// module id = ../../../../../src/app/books/addbook-form.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { BooksService } from \"./books.service\";\r\n\r\n@Component({\r\n  selector: 'addbook-form',\r\n  templateUrl: './addbook-form.component.html'\r\n})\r\nexport class AddBookFormComponent {\r\n  genres: string[] = [\"Drama\", \"Education\", \"Fiction\"];\r\n  formats: string[] = [\"Paperback\", \"Hardcover\", \"PDF\"];\r\n  books: any[];\r\n  constructor(private _bookService: BooksService, private router: Router\r\n  ) { }\r\n\r\n  onSubmit(formValue: any){\r\n    console.log(\"Form Value = \" + JSON.stringify(formValue, null, 8));      //PROBLEM\r\n    \r\n    let newBook = {\r\n         \r\n          title: formValue.title,\r\n          isbn: formValue.isbn,\r\n          author: formValue.author,\r\n          publicationDate: formValue.publicationDate,\r\n          publisher: formValue.publisher,\r\n          price: formValue.price,\r\n          genre: formValue.genre,\r\n          format: formValue.format,\r\n        };\r\n    this._bookService.addBook(newBook).subscribe(() => {\r\n      this.router.navigate(['allbook']);\r\n  },\r\n  err => {\r\n    console.log(err);\r\n  })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/addbook-form.component.ts","module.exports = \"<div>\\r\\n    <h2>Book Details</h2>\\r\\n    <table *ngFor= 'let book of book' style=\\\"margin-left:20px\\\">\\r\\n      <tr>\\r\\n        <td>ID:</td>\\r\\n        <td>{{book.id}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Title:</td>\\r\\n        <td>{{book.title}}</td>\\r\\n      </tr>\\r\\n\\r\\n\\r\\n      <tr>\\r\\n        <td>Author:</td>\\r\\n        <td>{{book.author}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>ISBN:</td>\\r\\n        <td>{{book.isbn}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>PublicationDate:</td>\\r\\n        <td>{{book.publicationDate}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Title:</td>\\r\\n        <td>{{book.title}}</td>\\r\\n      </tr>\\r\\n\\r\\n      <tr>\\r\\n        <td>Publisher:</td>\\r\\n        <td>{{book.publisher}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Price:</td>\\r\\n        <td>{{book.price}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Genre:</td>\\r\\n        <td>{{book.genre}}</td>\\r\\n      </tr>\\r\\n       <tr>\\r\\n        <td>Format:</td>\\r\\n        <td>{{book.format}}</td>\\r\\n      </tr>\\r\\n\\r\\n\\r\\n\\r\\n    </table>\\r\\n    <button (click)=\\\"goBack()\\\">Back</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/book-detail.component.html\n// module id = ../../../../../src/app/books/book-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { BooksService } from \"./books.service\";\r\n\r\n//import \"rxjs/add/operator/map\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-book',\r\n    templateUrl: './book-detail.component.html',\r\n   \r\n})\r\nexport class BookComponent implements OnInit {\r\n    id: any;\r\n    book: any[];\r\n    \r\n    constructor(private _bookService: BooksService, private route: ActivatedRoute,\r\n     private location: Location) {\r\n    }\r\n\r\n ngOnInit(): void {\r\n    this.route.params.forEach((params: Params) => {\r\n            this.id = +params['id'];\r\n        });\r\n     this._bookService.getBook(this.id).subscribe(\r\n        book=>{\r\n          this.book=book;\r\n        });\r\n   \r\n }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/book-detail.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'bookFilter'})\r\nexport class BookFilterPipe implements PipeTransform {\r\n    transform(books: any[], searchby: string): any[] {\r\n        let filter: string = searchby ? searchby.toLocaleLowerCase() : null;\r\n        return filter ? books.filter((book) =>\r\n            book.title.toLocaleLowerCase().startsWith(filter) != false) : books;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/books-filter.pipe.ts","module.exports = \"<h2 class=\\\"text-center\\\"><b>List of Available Books with all the Details</b></h2>\\r\\n<div class='panel panel-primary'>\\r\\n    <div class='panel-heading'>\\r\\n        {{title}}\\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-2 text-center' style= \\\"color: lightslategrey; font-size: 30px\\\" ><em>Search By Book Name:</em></div>\\r\\n            <div class='col-md-4 text-center'>\\r\\n                <input placeholder=\\\"Book Name\\\" type='text'[(ngModel)]='nameFilter' />\\r\\n            </div>\\r\\n        </div>\\r\\n        <table class='table table-striped table-condensed' *ngIf='books && books.length'>\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"min-width: 80px;\\\">Title</th>\\r\\n                    <th style=\\\"min-width: 80px;\\\">Author</th>\\r\\n                    <th style=\\\"min-width: 100px;\\\">Publisher</th>\\r\\n                    <th style=\\\"min-width: 60px;\\\">Publication Date</th>\\r\\n                   <th style=\\\"min-width: 60px;\\\">ISBN</th>\\r\\n                    <th style=\\\"min-width: 60px;\\\">Price</th>\\r\\n                    <th style=\\\"min-width: 60px;\\\">Genre</th>\\r\\n                    <th style=\\\"min-width: 60px;\\\">Format</th>\\r\\n                    <th style=\\\"width:20px;\\\"> </th>\\r\\n                    <th style=\\\"width:20px;\\\"> </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor='let book of books | bookFilter: nameFilter'>\\r\\n                    <td><a [routerLink]=\\\"book.id\\\">{{ book.title | uppercase }}</a></td>\\r\\n                    <td>{{ book.author }}</td>\\r\\n                    <td>{{ book.publisher }}</td>\\r\\n                    <td>{{ book.publicationDate | date}}</td>\\r\\n                   <td>{{ book.isbn }}</td>\\r\\n                    <td>{{ book.price }}</td>\\r\\n                    <td>{{ book.genre }}</td>\\r\\n                    <td>{{ book.format }}</td>\\r\\n                     <td><a [routerLink]=\\\"['/updatebook',book.id]\\\" class=\\\"btn btn-xs btn-primary\\\">Edit</a></td>\\r\\n                    <td><a (click)=\\\"deleteBook(book.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</a></td>\\r\\n                    </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n      <a routerLink=\\\"/addbook\\\" class=\\\"btn btn-xs btn-primary\\\">Add Book</a>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/books.component.html\n// module id = ../../../../../src/app/books/books.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { BooksService } from \"./books.service\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-books',\r\n  templateUrl: './books.component.html',\r\n})\r\nexport class BooksComponent implements OnInit {\r\n  books: any; \r\n  // PROBLEM\r\n  constructor(private _booksService: BooksService) { }\r\n\r\n  ngOnInit() {\r\n    this.books =  this._booksService.getBooks().\r\n    subscribe(books =>{\r\n      this.books = books;\r\n    });\r\n    console.log(this.books);\r\n  }\r\n\r\n  deleteBook(bookid: any) {\r\n    this._booksService.deleteBook(bookid).subscribe();\r\n   this.books = this._booksService.getBooks().subscribe(books => {\r\n      this.books = books;\r\n    })\r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/books.component.ts","import { Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { Book } from \"./initial-books\";\r\n\r\n@Injectable()\r\nexport class BooksService  {\r\n  private _booksUrl = \"http://localhost:3000/book\";\r\n\r\n  constructor (private _http: Http) { }\r\n\r\n    getBooks(){\r\n      return this._http.get(this._booksUrl)\r\n      .map(res=> res.json());\r\n    }\r\n\r\n    getBook(id: any){\r\n      return this._http.get(\"http://localhost:3000/book/\"+id)\r\n      .map(res=> res.json());\r\n    }\r\n  \r\n\r\n  \r\n\r\n    addBook(newBook: any) {\r\n      console.log(newBook);\r\n      var headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n\r\n      return this._http.post('http://localhost:3000/book', JSON.stringify(newBook), {headers: headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n    updateBook(updatedBook: any) {\r\n      console.log(updatedBook);\r\n      var headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n\r\n      return this._http.put('http://localhost:3000/book/'+updatedBook.id, JSON.stringify(updatedBook), {headers: headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n    deleteBook(id: any) {\r\n      return this._http.delete(\"http://localhost:3000/book/\"+id)\r\n      .map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/books.service.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Update Book</h1>\\r\\n  <form *ngFor='let book of books' #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formRef.value)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\">Book Title</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"book.title\\\" required minlength=\\\"3\\\" #nameRef1=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef1.invalid && (nameRef1.dirty || nameRef1.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef1.errors.required\\\">\\r\\n          Title is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef1.errors.minlength\\\">\\r\\n          Title must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"author\\\">Author</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"author\\\" name=\\\"author\\\" [(ngModel)]=\\\"book.author\\\" required minlength=\\\"5\\\" #nameRef2=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef2.invalid && (nameRef2.dirty || nameRef2.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef2.errors.required\\\">\\r\\n          A name is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef2.errors.minlength\\\">\\r\\n          Name must be at least 5 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"publisher\\\">Publisher</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"publisher\\\" name=\\\"publisher\\\" [(ngModel)]=\\\"book.publisher\\\" required minlength=\\\"3\\\" #nameRef3=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef3.invalid && (nameRef3.dirty || nameRef3.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef3.errors.required\\\">\\r\\n          Name is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef3.errors.minlength\\\">\\r\\n        Name must be at least 3 characters long.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"price\\\">ISBN</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"isbn\\\" name=\\\"isbn\\\" [(ngModel)]=\\\"book.isbn\\\" required  #nameRef4=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef4.invalid && (nameRef4.dirty || nameRef4.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef4.errors.required\\\">\\r\\n          ISBN is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef4.errors.minlength\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"publicationDate\\\">Publication Date</label>\\r\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"publicationDate\\\" name=\\\"publicationDate\\\" [(ngModel)]=\\\"book.publicationDate\\\" required minlength=\\\"3\\\" #nameRef=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef.invalid && (nameRef.dirty || nameRef.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef.errors.required\\\">\\r\\n          Date is required.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nameRef.errors.minlength\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"price\\\">Book Price</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"book.price\\\" required  #nameRef5=\\\"ngModel\\\">\\r\\n      <div *ngIf=\\\"nameRef5.invalid && (nameRef5.dirty || nameRef5.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"nameRef5.errors.required\\\">\\r\\n          Price is required.\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"genre\\\">Genre</label>\\r\\n      <select class=\\\"form-control\\\" name=\\\"genre\\\" [ngModel]=\\\"book.genre\\\">\\r\\n        <option *ngFor=\\\"let genre of genres\\\" [value]=\\\"genre\\\">\\r\\n          {{genre}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div><div class=\\\"form-group\\\">\\r\\n      <label for=\\\"genre\\\">Format</label>\\r\\n      <select class=\\\"form-control\\\" name=\\\"format\\\" [ngModel]=\\\"book.format\\\">\\r\\n        <option *ngFor=\\\"let format of formats\\\" [value]=\\\"format\\\">\\r\\n          {{format}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n \\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"formRef.invalid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/editbook-form.component.html\n// module id = ../../../../../src/app/books/editbook-form.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { BooksService } from \"./books.service\";\r\n\r\n@Component({\r\n  selector: 'editbook-form',\r\n  templateUrl: './editbook-form.component.html'\r\n})\r\nexport class EditBookFormComponent {\r\n genres: string[] = [\"Drama\", \"Education\", \"Fiction\"];\r\n  formats: string[] = [\"Paperback\", \"Hardcover\", \"PDF\"];\r\n\r\n  constructor(private _bookService: BooksService, private route: ActivatedRoute, private router: Router\r\n  ) { }\r\n  id: any;\r\n  books: any[];\r\n\r\n  ngOnInit(): void {\r\n     this.route.params.forEach((params: Params) => {\r\n         this.id = +params['id'];\r\n        });\r\n      this._bookService.getBook(this.id)\r\n      .subscribe(book=>{\r\n        this.books = book;\r\n      });\r\n  }\r\n\r\n  onSubmit(formValue: any){\r\n    console.log(\"Form Value = \" + JSON.stringify(formValue, null, 4));\r\n    let updatedBook = {\r\n          id: this.books[0].id,\r\n          title: formValue.title,\r\n          author: formValue.author,\r\n          isbn: formValue.isbn,\r\n          publicationDate: formValue.publicationDate,\r\n          publisher: formValue.publisher,\r\n          price: formValue.price,\r\n          genre: formValue.genre,\r\n          format: formValue.format\r\n        };\r\n    this._bookService.updateBook(updatedBook).subscribe(()=>{\r\n      this.router.navigate(['allbook']);\r\n  },\r\n    err=>{\r\n    console.log(err)\r\n  })\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/editbook-form.component.ts","module.exports = \"<h2 class=\\\"text-center\\\" style=\\\"color: lightslategrey\\\">Summary</h2>\\r\\n<div class='panel panel-primary'>\\r\\n    <div class='panel-heading'>\\r\\n        {{title}}\\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n        <div class='row'>\\r\\n            \\r\\n        <table class='table table-striped table-condensed' *ngIf='books && books.length'>\\r\\n            <thead>\\r\\n               \\r\\n                    <th style=\\\"min-width: 40px;\\\">Title</th>\\r\\n                    <th style=\\\"min-width: 40px;\\\">Author</th>\\r\\n\\r\\n                    <th style=\\\"min-width: 30px;\\\">Price</th>\\r\\n                    <th style=\\\"width:20px;\\\"> </th>\\r\\n                    <th style=\\\"width:20px;\\\"> </th>\\r\\n                \\r\\n            </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor='let book of books'>\\r\\n                    <td>{{ book.title | uppercase }}</td>\\r\\n                    <td>{{ book.author }}</td>\\r\\n                  \\r\\n                    <td>{{ book.price }}</td>\\r\\n                   \\r\\n                   \\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n      <button class=\\\"btn-default\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ilp4/angular/src/app/books/summary.component.html\n// module id = ../../../../../src/app/books/summary.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { BooksService } from './books.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { Location } from \"@angular/common\";\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\n \r\n@Component({\r\n  selector: 'summary',\r\n  templateUrl: './summary.component.html',\r\n})\r\nexport class BookSummary implements OnInit {\r\n  books: any;\r\n\r\n  constructor(private _bookService: BooksService, private route: ActivatedRoute, private location: Location) { }\r\n\r\n  ngOnInit() {\r\n    this.books= this._bookService.getBooks();\r\n    console.log(this.books);\r\n  }\r\ngoBack(): void {\r\n        this.location.back();\r\n\r\n}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/app/books/summary.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// E:/ilp4/angular/src/main.ts"],"sourceRoot":"webpack:///"}